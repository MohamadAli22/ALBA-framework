[% var conf = Config.all.first ; %]
[% var frag = LoginFragment.all.first ; %]
package [%=conf.packageName%];


import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.design.widget.TextInputEditText;
import android.support.design.widget.TextInputLayout;
import android.support.v4.app.Fragment;
import android.support.v7.widget.CardView;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Toast;

import com.google.gson.internal.LinkedTreeMap;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.http.GET;
import retrofit2.http.Path;

/**
 * Created by lobam.
 */
public class LoginFragment extends Fragment {
    View root;

    EditText mobiletext,passtext;
    TextInputLayout mobile_layout,pass_layout;
    CardView login;
    CheckBox cb;

    String resu;
    boolean email = false;

    String name;
    String emailsend;
    String mobile;
    String password;
    String userid;



    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        root = inflater.inflate(R.layout.fragment_login,null);

        mobiletext =(EditText) root.findViewById(R.id.mobileedt);
        passtext =(EditText) root.findViewById(R.id.passedt);
        mobiletext =(TextInputEditText) root.findViewById(R.id.mobileedt);
        passtext =(TextInputEditText) root.findViewById(R.id.passedt);
        mobile_layout = (TextInputLayout) root.findViewById(R.id.layout_mobile);
        pass_layout = (TextInputLayout) root.findViewById(R.id.layout_pass);
        login =(CardView) root.findViewById(R.id.login_enter);
        cb = (CheckBox) root.findViewById(R.id.login_cb);

        mobiletext.addTextChangedListener(new textWatcher(mobiletext));

        login.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //todo login
            }
        });

        MainActivity.drawer.setSelection(1);

        return root;
    }



    class textWatcher implements TextWatcher {

        public boolean validateemail = false;

        private View view;

        /**
         *
         * @param view
         */
        public textWatcher(View view) {
            this.view = view;
        }

        public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
        }

        public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
        }

        @Override
        public void afterTextChanged(Editable editable) {
            switch (view.getId()) {
                case R.id.mobileedt:
                    validatemobile();
                    break;

            }
        }



[%if(frag.generateEmailValidationCode){%]
        /**
         *
         * @return true, if mobile number is valid
         */
        public boolean validatemobile() {
            String mobile = mobiletext.getText().toString();

            if(mobile.contains("@")){
                if (mobile.isEmpty()) {
                    mobile_layout.setError("email is not correct");
                    return false;
                } else {
                    mobile_layout.setErrorEnabled(false);
                    email = true;
                }
            }else{
                if (mobile.isEmpty() [%if(frag.generatePhoneNumberValidationCode){%]|| !isValidMobile(mobile)[%}%]) {
                    mobile_layout.setError("mobile number is not correct");
                    return false;
                } else {
                    mobile_layout.setErrorEnabled(false);
                    email = false;
                }
            }
            validateemail=true;
            return true;
        }
[%}%]
[%if(frag.generatePhoneNumberValidationCode){%]
        /**
         *
         * @param mobile number
         * @return validate mobile number
         */
        private boolean isValidMobile(String mobile) {
            if(!TextUtils.isEmpty(mobile)&&mobile.matches("(\\+98|0)?9\\d{9}")){
                return true;
            }
            return false;
        }
[%}%]        

    }

}